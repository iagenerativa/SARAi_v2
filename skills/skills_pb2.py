# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: skills.proto
# Protobuf Python Version: 6.31.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    6,
    31,
    1,
    '',
    'skills.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0cskills.proto\x12\x0csarai.skills\"\xce\x01\n\x0cInferRequest\x12\x0e\n\x06prompt\x18\x01 \x01(\t\x12\x12\n\nmax_tokens\x18\x02 \x01(\x05\x12\x13\n\x0btemperature\x18\x03 \x01(\x02\x12\x0c\n\x04stop\x18\x04 \x03(\t\x12\r\n\x05top_p\x18\x05 \x01(\x02\x12\x38\n\x07\x63ontext\x18\x06 \x03(\x0b\x32\'.sarai.skills.InferRequest.ContextEntry\x1a.\n\x0c\x43ontextEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x85\x01\n\rInferResponse\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12\x12\n\nlatency_ms\x18\x03 \x01(\x03\x12\x18\n\x10tokens_generated\x18\x04 \x01(\x05\x12\r\n\x05model\x18\x05 \x01(\t\x12\x15\n\rfinish_reason\x18\x06 \x01(\t\"%\n\x12HealthCheckRequest\x12\x0f\n\x07service\x18\x01 \x01(\t\"\xe6\x01\n\x13HealthCheckResponse\x12?\n\x06status\x18\x01 \x01(\x0e\x32/.sarai.skills.HealthCheckResponse.ServingStatus\x12\x0f\n\x07message\x18\x02 \x01(\t\x12\x14\n\x0creload_count\x18\x03 \x01(\x05\x12\x16\n\x0euptime_seconds\x18\x04 \x01(\x03\"O\n\rServingStatus\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SERVING\x10\x01\x12\x0f\n\x0bNOT_SERVING\x10\x02\x12\x13\n\x0fSERVICE_UNKNOWN\x10\x03\"\x10\n\x0eMetricsRequest\"\xb2\x01\n\x0fMetricsResponse\x12\x16\n\x0etotal_requests\x18\x01 \x01(\x03\x12\x17\n\x0f\x66\x61iled_requests\x18\x02 \x01(\x03\x12\x16\n\x0e\x61vg_latency_ms\x18\x03 \x01(\x02\x12\x16\n\x0ep99_latency_ms\x18\x04 \x01(\x02\x12\x11\n\tram_bytes\x18\x05 \x01(\x03\x12\x14\n\x0ctotal_tokens\x18\x06 \x01(\x03\x12\x15\n\rcold_start_ms\x18\x07 \x01(\x03\x32\xe9\x01\n\x0cSkillService\x12@\n\x05Infer\x12\x1a.sarai.skills.InferRequest\x1a\x1b.sarai.skills.InferResponse\x12L\n\x05\x43heck\x12 .sarai.skills.HealthCheckRequest\x1a!.sarai.skills.HealthCheckResponse\x12I\n\nGetMetrics\x12\x1c.sarai.skills.MetricsRequest\x1a\x1d.sarai.skills.MetricsResponseb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'skills_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_INFERREQUEST_CONTEXTENTRY']._loaded_options = None
  _globals['_INFERREQUEST_CONTEXTENTRY']._serialized_options = b'8\001'
  _globals['_INFERREQUEST']._serialized_start=31
  _globals['_INFERREQUEST']._serialized_end=237
  _globals['_INFERREQUEST_CONTEXTENTRY']._serialized_start=191
  _globals['_INFERREQUEST_CONTEXTENTRY']._serialized_end=237
  _globals['_INFERRESPONSE']._serialized_start=240
  _globals['_INFERRESPONSE']._serialized_end=373
  _globals['_HEALTHCHECKREQUEST']._serialized_start=375
  _globals['_HEALTHCHECKREQUEST']._serialized_end=412
  _globals['_HEALTHCHECKRESPONSE']._serialized_start=415
  _globals['_HEALTHCHECKRESPONSE']._serialized_end=645
  _globals['_HEALTHCHECKRESPONSE_SERVINGSTATUS']._serialized_start=566
  _globals['_HEALTHCHECKRESPONSE_SERVINGSTATUS']._serialized_end=645
  _globals['_METRICSREQUEST']._serialized_start=647
  _globals['_METRICSREQUEST']._serialized_end=663
  _globals['_METRICSRESPONSE']._serialized_start=666
  _globals['_METRICSRESPONSE']._serialized_end=844
  _globals['_SKILLSERVICE']._serialized_start=847
  _globals['_SKILLSERVICE']._serialized_end=1080
# @@protoc_insertion_point(module_scope)
