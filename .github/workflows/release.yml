# .github/workflows/release.yml
# SARAi v2.6 - Release & Sign (DevSecOps)
#
# Flujo autom√°tico:
#   git tag v2.5.0 && git push origin v2.5.0
#   ‚Üí Build multi-arch
#   ‚Üí Genera SBOM (Syft)
#   ‚Üí Firma con Cosign (OIDC keyless)
#   ‚Üí Publica en GHCR + GitHub Release
#   ‚Üí Sube dashboard a Grafana Cloud

name: SARAi v2.6 - Release & Sign

on:
  push:
    tags:
      - 'v*.*.*'  # Matches v2.5.0, v2.5.1, v2.6.0, etc.

jobs:
  release-and-sign:
    runs-on: ubuntu-latest
    permissions:
      contents: write      # Crear GitHub Release
      packages: write      # Push a GHCR
      id-token: write      # Cosign OIDC signing
      attestations: write  # Attestation storage

    steps:
      # ============================================================
      # 1. CHECKOUT & SETUP
      # ============================================================
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Setup Docker Buildx (multi-arch)
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ============================================================
      # 2. BUILD & PUSH MULTI-ARCH (v2.5 God Mode)
      # ============================================================
      - name: Build & Push Docker Image (amd64 + arm64)
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            SARAI_VERSION=${{ github.ref_name }}

      # ============================================================
      # 3. SECURITY: SBOM + COSIGN SIGNING
      # ============================================================
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        with:
          cosign-release: 'v2.2.4'

      - name: Install Syft (SBOM Generator)
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/syft/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Generate SBOM (Software Bill of Materials)
        run: |
          syft ghcr.io/${{ github.repository }}:${{ github.ref_name }} \
            -o spdx-json=sbom.spdx.json \
            -o cyclonedx-json=sbom.cyclonedx.json
          
          # Resumen legible para humans
          syft ghcr.io/${{ github.repository }}:${{ github.ref_name }} \
            -o table > sbom.txt

      - name: Sign Docker Image (Cosign OIDC Keyless)
        run: |
          # Firma la imagen usando OIDC (sin claves locales)
          cosign sign --yes \
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}@${{ steps.build.outputs.digest }}

      - name: Attest SBOM to Image
        run: |
          # Adjunta el SBOM como attestation verificable
          cosign attest --yes --type spdxjson \
            --predicate sbom.spdx.json \
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}@${{ steps.build.outputs.digest }}

      # ============================================================
      # 4. GITHUB RELEASE
      # ============================================================
      - name: Extract CHANGELOG for this version
        id: changelog
        run: |
          # Extrae la secci√≥n del CHANGELOG para este release
          VERSION=${{ github.ref_name }}
          awk "/^## \[${VERSION#v}\]/{flag=1;next}/^## \[/{flag=0}flag" CHANGELOG.md > release_notes.md || echo "Release $VERSION" > release_notes.md

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "sbom.spdx.json,sbom.cyclonedx.json,sbom.txt"
          bodyFile: release_notes.md
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
          prerelease: false

      # ============================================================
      # 5. GRAFANA DASHBOARD PUBLISH
      # ============================================================
      - name: Setup Python for Grafana publish
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install requests library
        run: pip install requests

      - name: Publish Dashboard to Grafana Cloud
        env:
          GRAFANA_API_KEY: ${{ secrets.GRAFANA_API_KEY }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
        run: |
          python scripts/publish_grafana.py || echo "‚ö†Ô∏è  Grafana publish fall√≥ (no cr√≠tico)"

      # ============================================================
      # 6. POST-RELEASE VALIDATION
      # ============================================================
      - name: Verify Cosign Signature
        run: |
          # Auto-verificaci√≥n de la firma
          cosign verify \
            --certificate-identity-regexp="https://github.com/${{ github.repository }}/*" \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com \
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}@${{ steps.build.outputs.digest }}

      - name: Summary
        run: |
          cat << EOF >> $GITHUB_STEP_SUMMARY
          # üéâ SARAi ${{ github.ref_name }} Released!
          
          ## üì¶ Artefactos Publicados
          - **Docker Image**: \`ghcr.io/${{ github.repository }}:${{ github.ref_name }}\`
          - **Digest**: \`${{ steps.build.outputs.digest }}\`
          - **Platforms**: linux/amd64, linux/arm64
          - **SBOM**: Adjunto al release (SPDX + CycloneDX)
          - **Signature**: Firmado con Cosign (keyless OIDC)
          
          ## ‚úÖ Verificaci√≥n
          \`\`\`bash
          # Verificar firma
          cosign verify ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          
          # Descargar SBOM
          cosign verify-attestation --type spdxjson \\
            ghcr.io/${{ github.repository }}:${{ github.ref_name }} | jq .
          
          # Ejecutar SARAi
          docker run --rm -p 8080:8080 \\
            ghcr.io/${{ github.repository }}:${{ github.ref_name }}
          \`\`\`
          
          ## üìä Dashboard
          - Grafana: ID 21902 (importar en tu instancia)
          - Health: http://localhost:8080/health
          - Metrics: http://localhost:8080/metrics
          EOF
