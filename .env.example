# SARAi v2.11 "Omni-Sentinel" - Environment Variables
# 
# Copia este archivo a .env y configura según tu entorno:
#   cp .env.example .env
#   nano .env

# ============================================================================
# AUDIO ENGINE (v2.11)
# ============================================================================

# Motor de voz: "omni3b", "nllb", "lfm2", o "disabled"
# - omni3b: (Default) Baja latencia, alta empatía (Español/Inglés)
# - nllb: Traducción multi-idioma, mayor latencia (Francés, Alemán, Japonés, etc.)
# - lfm2: Fallback de solo texto (si se deshabilita la voz)
# - disabled: Sin voz
AUDIO_ENGINE=omni3b

# Whitelist de idiomas permitidos por el router NLLB
# Formato: códigos ISO 639-1 separados por comas
# Ejemplos: es (Español), en (Inglés), fr (Francés), de (Alemán), ja (Japonés)
LANGUAGES=es,en,fr,de,ja

# Ruta al modelo ONNX (relativa al workspace)
OMNI_MODEL_PATH=models/Qwen3-VL-4B-Instruct-es-q4.onnx

# Puerto del servidor de voz
OMNI_PORT=8001

# ============================================================================
# HOME ASSISTANT (v2.11)
# ============================================================================

# URL de tu instancia local de Home Assistant
HOME_ASSISTANT_URL=http://192.168.1.100:8123

# Long-lived access token (generar en HA: Perfil > Long-Lived Access Tokens)
# IMPORTANTE: Mantener en secreto, no commitear a git
HOME_ASSISTANT_TOKEN=

# ============================================================================
# SECURITY & AUDIT (v2.11)
# ============================================================================

# Secret para HMAC signing (generar con: openssl rand -hex 32)
# CRÍTICO: Cambiar en producción, usar al menos 32 caracteres
SARAI_HMAC_SECRET=sarai-v2.11-omni-sentinel-change-in-production

# Habilitar chattr +a (append-only) en logs (requiere root)
ENABLE_CHATTR=false

# Webhook para alertas de integridad (Slack, Discord, etc.)
# Formato Slack: https://hooks.slack.com/services/XXX/YYY/ZZZ
ALERT_WEBHOOK_URL=

# ============================================================================
# SEARXNG (v2.10)
# ============================================================================

# URL de SearXNG local (docker)
SEARXNG_URL=http://localhost:8888

# ============================================================================
# RUNTIME
# ============================================================================

# Backend de inferencia: "cpu" (GGUF) o "gpu" (4-bit)
RUNTIME_BACKEND=cpu

# Threads para llama-cpp (os.cpu_count() - 2 recomendado)
N_THREADS=6

# RAM máxima asignable (GB)
MAX_RAM_GB=12

# ============================================================================
# PHOENIX SKILLS (v2.16)
# ============================================================================

# Threads para skill_draft (Qwen3-VL-4B-Instruct)
# Recomendado: 4 threads para balance latencia/throughput
SKILL_DRAFT_THREADS=4

# Threads para skill_image (OpenCV)
# Recomendado: 2 threads (procesamiento ligero)
SKILL_IMAGE_THREADS=2

# Habilitar caché de imágenes procesadas
SKILL_IMAGE_CACHE_ENABLED=true

# Tamaño máximo de caché de imágenes (MB)
SKILL_IMAGE_CACHE_SIZE_MB=1024

# Omni-Loop: Máximo de iteraciones reflexivas
OMNI_LOOP_MAX_ITERATIONS=3

# Omni-Loop: Umbral de confianza para early exit (0.0-1.0)
OMNI_LOOP_CONFIDENCE_THRESHOLD=0.85

# ============================================================================
# LOGGING
# ============================================================================

# Nivel de log: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Directorio de logs
LOGS_DIR=logs

# ============================================================================
# DOCKER
# ============================================================================

# Usuario para contenedores (UID:GID)
DOCKER_USER=1000:1000

# Red interna aislada
DOCKER_NETWORK_INTERNAL=true

# Contenedores read-only
DOCKER_READ_ONLY=true

# ============================================================================
# DEVELOPMENT
# ============================================================================

# Modo desarrollo (deshabilita algunas restricciones de seguridad)
DEV_MODE=false

# Habilitar Jupyter para análisis
ENABLE_JUPYTER=false
JUPYTER_PORT=8888
